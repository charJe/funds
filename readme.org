#+title: Funds
Funds provides portable, purely functional data structures in Common Lisp.
The array, hash, Queue, and Heap are implemented using trees, so "modifying" them is O(log(n)) time and space.
https://common-lisp.net/project/funds/
https://common-lisp.net/project/funds/funds.pdf

Below are the exported functions; they should be self explanatory:

* Array
- MAKE-ARRAY
- ARRAY-ELT
- ARRAY-REPLACE
- ARRAY-SIZE
- ARRAY-COUNT
- MAP-ARRAY
- ARRAY-COPY (can also be used for subarray)
- ARRAY-COUNT-IF
- ARRAY-AS-LIST

* Hash
- MAKE-HASH
- HASH-ADD
- HASH-REMOVE
- HASH-LOOKUP
- HASH-SIZE
- MAP-HASH
- HASH-KEYS
- HASH-FROM-ALIST
- HASH-AS-ALIST

* Queue
- MAKE-QUEUE
- DEQUEUE
- ENQUEUE
- QUEUE-FIRST
- QUEUE-COUNT
- QUEUE-COUNT-IF
- QUEUE-EMPTY-P
- QUEUE-SIZE
- MAP-QUEUE
- QUEUE-AS-LIST

* Heap
- MAKE-HEAP
- HEAP-INSERT
- HEAP-REMOVE
- HEAP-FIRST
- HEAP-EMPTY-P

* Stack
- MAKE-STACK
- STACK-PUSH
- STACK-POP
- STACK-TOP
- STACK-COUNT
- STACK-COUNT-IF
- MAP-STACK
- STACK-EMPTY-P
- STACK-SIZE
- STACK-FROM-LIST
- STACK-AS-LIST

